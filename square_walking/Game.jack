class Game {
  field Square square;
  field Wall wall;
  field int direction;
  field int time;
  field Pause_interface pause;

  constructor Game new(int difficulty, int level) {
    let time = difficulty;
    let wall = Wall.intitialize(level);
    let square = Square.new(8, 8, 7);
    let direction = 0;
    let pause = Pause_interface.new();
    return this;
  }

  method void dispose() {
    do wall.dispose();
    do square.dispose();
    do Memory.deAlloc(this);
    do Screen.clearScreen();
    do pause.dispose();
    return;
  }

  method void move() {
    if(direction = 1) {
      do square.move_up();
    }
    if(direction = 2) {
      do square.move_down();
    }
    if(direction = 3) {
      do square.move_left();
    }
    if(direction = 4) {
      do square.move_right();
    }
    do Sys.wait(time);
    return;
  }
  
  method int run() {
    var char key;
    var boolean exit;
    let exit = false;

    while(~exit) {
      //while key is not be pressed, the square keeps moving
      while(key = 0) {
        let key = Keyboard.keyPressed();
        do move();
        if(wall.hit(square.Posrow(), square.Poscol()) = 1) {    // lose
          return 0;
        }
        if((square.Posrow() = 224) & (square.Poscol() = 480)) {   // win
          return 1;
        }
      }

      if(key = 81) {    // press q
        do pause.choose();
        let exit = true;
      }
       if(key = 131) {   // press up_direction
        let direction = 1;
      }
      if(key = 133) {   // press down_direction
        let direction = 2;
      }
      if(key = 130) {   // press left_direction
        let direction = 3;
      }
      if(key = 132) {   // press right_direction
         let direction = 4;
      }

      //wait for the key is released
      while(~(key = 0)) {
        let key = Keyboard.keyPressed();
        do move();
        if(wall.hit(square.Posrow(), square.Poscol()) = 1) {    // lose
          return 0;
        }
        if((square.Posrow() = 224) & (square.Poscol() = 480)) {   // win
          return 1;
        }
      }
    }
    return pause.get_value();   // exit
  }
}