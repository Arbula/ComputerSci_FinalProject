class Game {
  field Square square;
  field Wall wall;
  field int direction;

  constructor Game new() {
    let wall = Wall.intitialize();
    let square = Square.new(0, 0, 7);
    let direction = 0;
    return this;
  }

  method void dispose() {
    do wall.dispose();
    do square.dispose();
    do Memory.deAlloc(this);
    return;
  }

  method void move() {
    if(direction = 1) {
      do square.move_up();
    }
    if(direction = 2) {
      do square.move_down();
    }
    if(direction = 3) {
      do square.move_left();
    }
    if(direction = 4) {
      do square.move_right();
    }
    do Sys.wait(50);
    return;
  }
  
  method void run() {
    var char key;
    var boolean exit;
    let exit = false;
    while(~exit) {
      //while key is not be pressed, the square keeps moving
      while(key = 0) {
        let key = Keyboard.keyPressed();
        do move();
        if(wall.hit(square.Posrow(), square.Poscol()) = 1){
          return;
        }
        if((square.Posrow() = 120) & (square.Poscol() = 496)) {
          return;
        }
      }

      if(key = 81) {    //press q
        let exit = true;
      }
      if(key = 131) {   //press up_direction
        let direction = 1;
      }
      if(key = 133) {   //press down_direction
        let direction = 2;
      }
      if(key = 130) {   //press left_direction
        let direction = 3;
      }
      if(key = 132) {   //press right_direction
        let direction = 4;
      }

      //wait for the key is released
      while(~(key = 0)) {
        let key = Keyboard.keyPressed();
        do move();
        if(wall.hit(square.Posrow(), square.Poscol()) = 1){
          return;
        }
        if((square.Posrow() = 120) & (square.Poscol() = 496)) {
          return;
        }
      }
    }
    return;
  }
}