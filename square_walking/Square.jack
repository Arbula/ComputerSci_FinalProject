class Square {
  field int x, y;
  field int size;

  constructor Square new(int newx, int newy, int newsize) {
    let x = newx;
    let y = newy;
    let size = newsize;

    do draw();
    return this;
  }

  method void dispose() {
    do Memory.deAlloc(this);
    return;
  }

  method void draw() {
    do Screen.setColor(true);
    do Screen.drawRectangle(x, y, x + size, y + size);
    return;
  }

  method void erase() {
    do Screen.setColor(false);
    do Screen.drawRectangle(x, y, x + size, y + size);
    return;
  }

  method void increase_size() {
    if(((y + size) < 254) & ((x + size) < 510)) {
      do erase();
      let size = size + 2;
      do draw();
    }
    return;
  }

  method void decrease_size() {
    if(size > 2) {
      do erase();
      let size = size - 2;
      do draw();
    }
    return;
  }

  method void move_up() {
    if(y > 1) {
      do Screen.setColor(false);
      do Screen.drawRectangle(x, y + size - 1, x + size, y + size);
      let y = y - 2;
      do Screen.setColor(true);
      do Screen.drawRectangle(x, y, x + size, y + 1);
    }
    return;
  }

  method void move_down() {
    if(y + size < 254) {
      do Screen.setColor(false);
      do Screen.drawRectangle(x, y, x + size, y + 1);
      let y = y + 2;
      do Screen.setColor(true);
      do Screen.drawRectangle(x, y + size - 1, x + size, y + size);
    }
    return;
  }

  method void move_left() {
    if(x > 1) {
      do Screen.setColor(false);
      do Screen.drawRectangle(x + size - 1, y, x + size, y + size);
      let x = x - 2;
      do Screen.setColor(true);
      do Screen. drawRectangle(x, y, x + 1, y + size);
    }
    return;
  }

  method void move_right() {
    if(x + size < 510) {
      do Screen.setColor(false);
      do Screen.drawRectangle(x, y, x + 1, y + size);
      let x = x + 2;
      do Screen.setColor(true);
      do Screen.drawRectangle(x + size - 1, y, x + size, y + size);
    }
    return;
  }  
}