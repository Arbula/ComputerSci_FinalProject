class Square {
  field int x, y;
  field int size;

  constructor Square new(int newx, int newy, int newsize) {
    let x = newx;
    let y = newy;
    let size = newsize;

    do draw();
    return this;
  }

  method int Posrow() {
    return y;
  }

  method int Poscol() {
    return x;
  }

  method void dispose() {
    do Memory.deAlloc(this);
    return;
  }

  method void draw() {
    do Screen.setColor(true);
    do Screen.drawRectangle(x, y, x + size, y + size);
    return;
  }

  method void erase() {
    do Screen.setColor(false);
    do Screen.drawRectangle(x, y, x + size, y + size);
    return;
  }

  method void move_up() {
    if(y > 1) {
      do Screen.setColor(false);
      do Screen.drawRectangle(x, y, x + size, y + size);
      let y = y - 8;
      do Screen.setColor(true);
      do Screen.drawRectangle(x, y, x + size, y + size);
    }
    return;
  }

  method void move_down() {
    if(y + size < 255) {
      do Screen.setColor(false);
      do Screen.drawRectangle(x, y, x + size, y + size);
      let y = y + 8;
      do Screen.setColor(true);
      do Screen.drawRectangle(x, y, x + size, y + size);
    }
    return;
  }

  method void move_left() {
    if(x > 1) {
      do Screen.setColor(false);
      do Screen.drawRectangle(x, y, x + size, y + size);
      let x = x - 8;
      do Screen.setColor(true);
      do Screen. drawRectangle(x, y, x + size, y + size);
    }
    return;
  }

  method void move_right() {
    if(x + size < 511) {
      do Screen.setColor(false);
      do Screen.drawRectangle(x, y, x + size, y + size);
      let x = x + 8;
      do Screen.setColor(true);
      do Screen.drawRectangle(x, y, x + size, y + size);
    }
    return;
  }  
}